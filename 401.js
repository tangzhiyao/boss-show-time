(()=>{"use strict";var e,o,t={9401:(e,o,t)=>{const a=0,s=1,r=2,n=r;function i(e){n<=r&&console.log(e)}function b(e){n==a?console.trace(e):n==s&&console.warn(e)}var l=t(2556),_=t(4353),c=t.n(_);class m{jobId;jobPlatform;jobUrl;jobName;jobCompanyName;jobLocationName;jobAddress;jobLongitude;jobLatitude;jobDescription;jobDegreeName;jobYear;jobSalaryMin;jobSalaryMax;jobSalaryTotalMonth;jobFirstPublishDatetime;bossName;bossCompanyName;bossPosition;createDatetime;updateDatetime}class j extends m{browseCount}class d{getSqlList(){return[]}}class u extends d{getSqlList(){return["\n  CREATE TABLE job(\n    job_id TEXT PRIMARY KEY,\n    job_platform TEXT,\n    job_url TEXT, \n    job_name TEXT,\n    job_company_name TEXT,\n    job_location_name TEXT,\n    job_address TEXT,\n    job_longitude NUMERIC,\n    job_latitude NUMERIC,\n    job_description TEXT,\n    job_degree_name TEXT,\n    job_year NUMERIC,\n    job_salary_min NUMERIC,\n    job_salary_max NUMERIC,\n    job_salary_total_month NUMERIC,\n    job_first_publish_datetime DATETIME,\n    boss_name TEXT,\n    boss_company_name  TEXT,\n    boss_position TEXT,\n    create_datetime DATETIME,\n    update_datetime DATETIME\n  )\n  ","\n  CREATE TABLE job_browse_history(\n    job_id TEXT,\n    job_visit_datetime DATETIME,\n    job_visit_type TEXT\n  )\n  "]}}var p=[];class f{todayBrowseCount;totalBrowseCount;totalJob}class h{items;total}class y extends h{}const g=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","+","/"],E=[255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,62,255,255,255,63,52,53,54,55,56,57,58,59,60,61,255,255,255,0,255,255,255,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,255,255,255,255,255,255,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51];function w(e){if(e>=E.length)throw new Error("Unable to parse base64 string.");const o=E[e];if(255===o)throw new Error("Unable to parse base64 string.");return o}var D=t(1710),T=t.n(D);const S="OFFSCREEN",A="WEB_WORKER";b("worker ready");const M="job.sqlite3",N="/"+M;let O,C,$,x=!1;const R={init:function(e,o){b("Loading and initializing sqlite3 module...");let t=[];t.push(new u),function(e){p=e}(t),(0,l.A)({print:b,printErr:i}).then((function(o){if(b("Done initializing. Running app..."),x)L(e);else try{B(o),x=!0,L(e)}catch(o){q(e,"init sqlite3 error : "+o.message)}}))},ping:function(e,o){L(e,"pong")},batchAddOrUpdateJobBrowse:function(e,o){try{const t=new Date;$.exec({sql:"BEGIN TRANSACTION"});for(let e=0;e<o.length;e++)Y(o[e],t);$.exec({sql:"COMMIT"}),L(e,{})}catch(o){q(e,"[worker] addOrUpdateJobBrowse error : "+o.message)}},addOrUpdateJobBrowse:function(e,o){try{const t=new Date;$.exec({sql:"BEGIN TRANSACTION"}),Y(o,t),$.exec({sql:"COMMIT"}),L(e,{})}catch(o){q(e,"[worker] addOrUpdateJobBrowse error : "+o.message)}},getJobBrowseInfoByIds:function(e,o){try{let a=new Map,s="'"+o.join("','")+"'";const r="SELECT job_id AS jobId ,count(*) AS total FROM job_browse_history WHERE job_id IN ("+s+") GROUP BY job_id;";let n=[];$.exec({sql:r,rowMode:"object",resultRows:n});for(let e=0;e<n.length;e++){let o=n[e];a.set(o.jobId,o.total)}let i=new Map;const b="SELECT job_id,job_platform,job_url,job_name,job_company_name,job_location_name,job_address,job_longitude,job_latitude,job_description,job_degree_name,job_year,job_salary_min,job_salary_max,job_salary_total_month,boss_name,boss_company_name,boss_position,create_datetime,update_datetime FROM job WHERE job_id in ("+s+")";let l=[];$.exec({sql:b,rowMode:"object",resultRows:l});for(let e=0;e<l.length;e++){let o=l[e],a=new j,s=Object.keys(o);for(let e=0;e<s.length;e++){let r=s[e];a[(t=r,t.replace(/\_(\w)/g,(function(e,o){return o.toUpperCase()})))]=o[r]}i.set(a.jobId,a)}let _=[];for(let e=0;e<o.length;e++){let t=o[e],s=i.get(t);s&&(s.browseCount=a.get(t)),_.push(s)}L(e,_)}catch(o){q(e,"[worker] getJobBrowseInfoByIds error : "+o.message)}var t},searchJob:function(e,o){try{let t=new y,a="SELECT job_id AS jobId,job_platform AS jobPlatform,job_url AS jobUrl,job_name AS jobName,job_company_name AS jobCompanyName,job_location_name AS jobLocationName,job_address AS jobAddress,job_longitude AS jobLongitude,job_latitude AS jobLatitude,job_description AS jobDescription,job_degree_name AS jobDegreeName,job_year AS jobYear,job_salary_min AS jobSalaryMin,job_salary_max AS jobSalaryMax,job_salary_total_month AS jobSalaryTotalMonth,job_first_publish_datetime AS jobFirstPublishDatetime,boss_name AS bossName,boss_company_name AS bossCompanyName,boss_position AS bossPosition,create_datetime AS createDatetime,update_datetime AS updateDatetime FROM job",s="SELECT COUNT(*) AS total from job",r="",n=" ORDER BY create_datetime DESC",i=" limit "+(o.pageNum-1)*o.pageSize+","+o.pageSize;o.jobName&&(r+=" AND job_name LIKE '%"+o.jobName+"%' "),o.jobCompanyName&&(r+=" AND job_company_name LIKE '%"+o.jobCompanyName+"%' "),o.startDatetime&&(r+=" AND create_datetime >= '"+c()(o.startDatetime).format("YYYY-MM-DD HH:mm:ss")+"'"),o.endDatetime&&(r+=" AND create_datetime < '"+c()(o.endDatetime).format("YYYY-MM-DD HH:mm:ss")+"'"),o.firstPublishStartDatetime&&(r+=" AND job_first_publish_datetime >= '"+c()(o.firstPublishStartDatetime).format("YYYY-MM-DD HH:mm:ss")+"'"),o.firstPublishEndDatetime&&(r+=" AND job_first_publish_datetime < '"+c()(o.firstPublishEndDatetime).format("YYYY-MM-DD HH:mm:ss")+"'"),r.startsWith(" AND")&&(r=r.replace("AND",""),r=" WHERE "+r),a+=r,a+=n,a+=i;let b=[],l=0,_=[];$.exec({sql:a,rowMode:"object",resultRows:_});for(let e=0;e<_.length;e++){let o=_[e],t=new j,a=Object.keys(o);for(let e=0;e<a.length;e++){let s=a[e];t[s]=o[s]}b.push(o)}s+=r;let m=[];$.exec({sql:s,rowMode:"object",resultRows:m}),l=m[0].total,t.items=b,t.total=l,L(e,t)}catch(o){q(e,"[worker] searchJob error : "+o.message)}},statisticJobBrowse:function(e,o){try{let o=new f,t=c()(),a=t.startOf("day").format("YYYY-MM-DD HH:mm:ss"),s=t.startOf("day").add(1,"day").format("YYYY-MM-DD HH:mm:ss");const r="SELECT COUNT(*) AS count FROM job_browse_history WHERE job_visit_datetime >= $startDatetime AND job_visit_datetime < $endDatetime";let n=[];$.exec({sql:r,rowMode:"object",resultRows:n,bind:{$startDatetime:a,$endDatetime:s}});const i="SELECT COUNT(*) AS count FROM job_browse_history";let b=[];$.exec({sql:i,rowMode:"object",resultRows:b});const l="SELECT COUNT(*) AS count FROM job;";let _=[];$.exec({sql:l,rowMode:"object",resultRows:_}),o.todayBrowseCount=n[0].count,o.totalBrowseCount=b[0].count,o.totalJob=_[0].count,L(e,o)}catch(o){q(e,"[worker] statisticJobBrowse error : "+o.message)}},dbExport:async function(e,o){try{let o=await O.sqlite3_js_db_export($);const t=new(T());t.file(M,o),t.generateAsync({compression:"DEFLATE",compressionOptions:{level:9},type:"uint8array"}).then((function(o){L(e,function(e){let o,t="",a=e.length;for(o=2;o<a;o+=3)t+=g[e[o-2]>>2],t+=g[(3&e[o-2])<<4|e[o-1]>>4],t+=g[(15&e[o-1])<<2|e[o]>>6],t+=g[63&e[o]];return o===a+1&&(t+=g[e[o-2]>>2],t+=g[(3&e[o-2])<<4],t+="=="),o===a&&(t+=g[e[o-2]>>2],t+=g[(3&e[o-2])<<4|e[o-1]>>4],t+=g[(15&e[o-1])<<2],t+="="),t}(o))}))}catch(o){q(e,"[worker] dbExport error : "+o.message)}},dbImport:async function(e,o){try{const t=new(T());let a,s=await t.loadAsync(function(e){if(e.length%4!=0)throw new Error("Unable to parse base64 string.");const o=e.indexOf("=");if(-1!==o&&o<e.length-2)throw new Error("Unable to parse base64 string.");let t,a=e.endsWith("==")?2:e.endsWith("=")?1:0,s=e.length,r=new Uint8Array(s/4*3);for(let o=0,a=0;o<s;o+=4,a+=3)t=w(e.charCodeAt(o))<<18|w(e.charCodeAt(o+1))<<12|w(e.charCodeAt(o+2))<<6|w(e.charCodeAt(o+3)),r[a]=t>>16,r[a+1]=t>>8&255,r[a+2]=255&t;return r.subarray(0,r.length-a)}(o));try{a=await s.file(M).async("uint8array")}catch(o){return void q(e,"file: "+M+" not found")}L(e,await C.OpfsDb.importDb(M,a))}catch(o){q(e,"[worker] dbExport error : "+o.message)}}},v=new Map;let I=Object.keys(R);for(let e=0;e<I.length;e++){let o=I[e];v.set(o,R[o])}function Y(e,o){let t=[];if($.exec({sql:"SELECT job_id,job_platform,job_url,job_name,job_company_name,job_location_name,job_address,job_longitude,job_latitude,job_description,job_degree_name,job_year,job_salary_min,job_salary_max,job_salary_total_month,job_first_publish_datetime,boss_name,boss_company_name,boss_position,create_datetime,update_datetime FROM job WHERE job_id = ?",rowMode:"object",bind:[e.jobId],resultRows:t}),t.length>0);else{const t="\n  INSERT INTO job (job_id,job_platform,job_url,job_name,job_company_name,job_location_name,job_address,job_longitude,job_latitude,job_description,job_degree_name,job_year,job_salary_min,job_salary_max,job_salary_total_month,job_first_publish_datetime,boss_name,boss_company_name,boss_position,create_datetime,update_datetime) VALUES ($job_id,$job_platform,$job_url,$job_name,$job_company_name,$job_location_name,$job_address,$job_longitude,$job_latitude,$job_description,$job_degree_name,$job_year,$job_salary_min,$job_salary_max,$job_salary_total_month,$job_first_publish_datetime,$boss_name,$boss_company_name,$boss_position,$create_datetime,$update_datetime)\n";$.exec({sql:t,bind:{$job_id:e.jobId,$job_platform:e.jobPlatform,$job_url:e.jobUrl,$job_name:e.jobName,$job_company_name:e.jobCompanyName,$job_location_name:e.jobLocationName,$job_address:e.jobAddress,$job_longitude:e.jobLongitude,$job_latitude:e.jobLatitude,$job_description:e.jobDescription,$job_degree_name:e.jobDegreeName,$job_year:e.jobYear,$job_salary_min:e.jobSalaryMin,$job_salary_max:e.jobSalaryMax,$job_salary_total_month:e.jobSalaryTotalMonth,$job_first_publish_datetime:c()(e.jobFirstPublishDatetime).isValid()?c()(e.jobFirstPublishDatetime).format("YYYY-MM-DD HH:mm:ss"):null,$boss_name:e.bossName,$boss_company_name:e.bossCompanyName,$boss_position:e.bossPosition,$create_datetime:c()(o).format("YYYY-MM-DD HH:mm:ss"),$update_datetime:c()(o).format("YYYY-MM-DD HH:mm:ss")}})}$.exec({sql:"\nINSERT INTO job_browse_history (job_id,job_visit_datetime,job_visit_type) VALUES ($job_id,$job_visit_datetime,$job_visit_type)\n",bind:{$job_id:e.jobId,$job_visit_datetime:c()(o).format("YYYY-MM-DD HH:mm:ss"),$job_visit_type:"SEARCH"}})}const B=async function(e){O=e.capi,C=e.oo1,b("SQLite3 version",O.sqlite3_libversion(),O.sqlite3_sourceid()),"OpfsDb"in C?($=new C.OpfsDb(N),b("[DB] The OPFS is available."),b("[DB] Persisted db ="+$.filename)):($=new C.DB(N,"ct"),b("[DB] The OPFS is not available."),b("[DB] transient db ="+$.filename)),i("[DB] schema checking...");let o=p,t=0,a=o.length;try{const e="SELECT COUNT(*) AS count FROM sqlite_schema;";let o=0,t=[];if($.exec({sql:e,rowMode:"object",resultRows:t}),t.length>0&&(o=t[0].count),i("[DB] current schemaCount = "+o),0==o){const e="PRAGMA auto_vacuum = 1";$.exec(e),i("[DB] execute "+e)}}catch(e){return void console.error("[DB] checking schema fail,"+e.message)}try{$.exec({sql:"BEGIN TRANSACTION"});const e="\n    CREATE TABLE IF NOT EXISTS version(\n      num INTEGER\n    )\n  ";$.exec(e);const s="SELECT num FROM version";let r=[];if($.exec({sql:s,rowMode:"object",resultRows:r}),r.length>0)t=r[0].num;else{const e="INSERT INTO version(num) values($num)";$.exec({sql:e,bind:{$num:0}})}if(i("[DB] schema oldVersion = "+t+", newVersion = "+a),a>t){i("[DB] schema upgrade start");for(let e=t;e<a;e++){let t=e+1,a=o[e].getSqlList();i("[DB] schema upgrade changelog version = "+t+", sql total = "+a.length);for(let e=0;e<a.length;e++){i("[DB] schema upgrade changelog version = "+t+", execute sql = "+(e+1)+"/"+a.length);let o=a[e];$.exec(o)}}const e="UPDATE version SET num = $num";$.exec({sql:e,bind:{$num:a}}),i("[DB] schema upgrade finish to version = "+a),i("[DB] current schema version = "+a)}else i("[DB] skip schema upgrade"),i("[DB] current schema version = "+t);$.exec({sql:"COMMIT"})}catch(e){console.error("[DB] schema upgrade fail,"+e.message),$.exec({sql:"ROLLBACK TRANSACTION"})}};function L(e,o){e.from=A,e.to=S,b("7.[worker][send]["+e.from+" -> "+e.to+"] message [action="+e.action+",callbackId="+e.callbackId+",error="+e.error+"]");let t=JSON.parse(JSON.stringify(e));t.data=o,postMessage({data:t})}function q(e,o){e.from=A,e.to=S,b("7.[worker][send]["+e.from+" -> "+e.to+"] message [action="+e.action+",callbackId="+e.callbackId+",error="+e.error+"]"),i(o);let t=JSON.parse(JSON.stringify(e));b(t),t.error=o,postMessage({data:t})}onmessage=function(e){let o=e.data;if(o&&o.from==S&&o.to==A){b("6.[worker][receive]["+o.from+" -> "+o.to+"] message [action="+o.action+",callbackId="+o.callbackId+",error="+o.error+"]");let e=o.action;b("[worker] invoke action = "+e),v.get(e)(o,o.param)}}}},a={};function s(e){var o=a[e];if(void 0!==o)return o.exports;var r=a[e]={exports:{}};return t[e].call(r.exports,r,r.exports,s),r.exports}s.m=t,s.x=()=>{var e=s.O(void 0,[689],(()=>s(9401)));return s.O(e)},e=[],s.O=(o,t,a,r)=>{if(!t){var n=1/0;for(_=0;_<e.length;_++){for(var[t,a,r]=e[_],i=!0,b=0;b<t.length;b++)(!1&r||n>=r)&&Object.keys(s.O).every((e=>s.O[e](t[b])))?t.splice(b--,1):(i=!1,r<n&&(n=r));if(i){e.splice(_--,1);var l=a();void 0!==l&&(o=l)}}return o}r=r||0;for(var _=e.length;_>0&&e[_-1][2]>r;_--)e[_]=e[_-1];e[_]=[t,a,r]},s.n=e=>{var o=e&&e.__esModule?()=>e.default:()=>e;return s.d(o,{a:o}),o},s.d=(e,o)=>{for(var t in o)s.o(o,t)&&!s.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},s.f={},s.e=e=>Promise.all(Object.keys(s.f).reduce(((o,t)=>(s.f[t](e,o),o)),[])),s.u=e=>e+".js",s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),s.p="./",(()=>{s.b=self.location+"";var e={401:1};s.f.i=(o,t)=>{e[o]||importScripts(s.p+s.u(o))};var o=self.webpackChunkboss_show_time=self.webpackChunkboss_show_time||[],t=o.push.bind(o);o.push=o=>{var[a,r,n]=o;for(var i in r)s.o(r,i)&&(s.m[i]=r[i]);for(n&&n(s);a.length;)e[a.pop()]=1;t(o)}})(),o=s.x,s.x=()=>s.e(689).then(o),s.x()})();
//# sourceMappingURL=401.js.map