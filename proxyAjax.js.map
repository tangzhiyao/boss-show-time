{"version":3,"file":"proxyAjax.js","mappings":"CAAC,WACG,GAAmC,mBAAvBA,OAAOC,YAA6B,OAAO,EAEvD,SAASA,EAAcC,EAAOC,GAC5BA,EAASA,GAAU,CAAEC,SAAS,EAAOC,YAAY,EAAOC,YAAQC,GAChE,IAAIC,EAAMC,SAASC,YAAa,eAEhC,OADAF,EAAIG,gBAAiBT,EAAOC,EAAOC,QAASD,EAAOE,WAAYF,EAAOG,QAC/DE,CACT,CACAP,EAAYW,UAAYZ,OAAOa,MAAMD,UACrCZ,OAAOC,YAAcA,CACxB,CAXA,GAaE,WACC,SAASa,EAAiBZ,GACxB,IAAIa,EAAY,IAAId,YAAYC,EAAO,CAAEI,OAAQU,OACjDhB,OAAOiB,cAAcF,EACvB,CAEA,IAAIG,EAASlB,OAAOmB,eACpB,IAAID,EAAQ,OAAOE,QAAQC,MAAM,yCAEjC,SAASC,IACP,IAAIC,EAAU,IAAIL,EAElBK,EAAQC,iBAAiB,SAAS,WAAcV,EAAiBW,KAAKT,KAAM,YAAc,IAAG,GAC7FO,EAAQC,iBAAiB,SAAS,WAAcV,EAAiBW,KAAKT,KAAM,YAAc,IAAG,GAC7FO,EAAQC,iBAAiB,QAAQ,WAAcV,EAAiBW,KAAKT,KAAM,WAAa,IAAG,GAC3FO,EAAQC,iBAAiB,aAAa,WAAcV,EAAiBW,KAAKT,KAAM,gBAAkB,IAAG,GACrGO,EAAQC,iBAAiB,YAAY,WAAcV,EAAiBW,KAAKT,KAAM,eAAiB,IAAG,GACnGO,EAAQC,iBAAiB,WAAW,WAAcV,EAAiBW,KAAKT,KAAM,cAAgB,IAAG,GACjGO,EAAQC,iBAAiB,WAAW,WAAcV,EAAiBW,KAAKT,KAAM,cAAgB,IAAG,GACjGO,EAAQC,iBAAiB,oBAAoB,WAAaV,EAAiBW,KAAKT,KAAM,uBAAyB,IAAG,GAElH,IAAIU,EAAOH,EAAQG,KACnBH,EAAQG,KAAO,YAAYC,GACzBD,EAAKE,MAAML,EAAQI,GACnBJ,EAAQM,KAAOF,EAAI,GACnBb,EAAiBW,KAAKF,EAAS,WACjC,EAEA,IAAIO,EAAOP,EAAQO,KACnBP,EAAQO,KAAO,YAAYH,GACzBG,EAAKF,MAAML,EAAQI,GACnBJ,EAAQQ,OAASJ,EAAI,GACrBJ,EAAQS,SAAWL,EAAI,GACvBJ,EAAQU,MAAQN,EAAI,GACpBb,EAAiBW,KAAKF,EAAS,WACjC,EAEA,IAAIW,EAAmBX,EAAQW,iBAM/B,OALAX,EAAQY,cAAgB,CAAC,EACzBZ,EAAQW,iBAAmB,SAASE,EAAMC,GACtCd,EAAQY,cAAcC,GAAQC,EAC9BH,EAAiBT,KAAKF,EAAQa,EAAKC,EACvC,EACOd,CACT,CACAD,EAAOV,UAAYM,EAAON,UAC1BZ,OAAOmB,eAAiBG,CACzB,CA/CA,GAkDDtB,OAAOwB,iBAAiB,wBAAuB,SAASc,GACtD,IAAIC,EAAMD,EAAEhC,OACZ,MAAMkC,EAAO,CACTC,SAAUF,GAAKE,SACfC,aAAcH,GAAKG,aACnBC,YAAaJ,GAAKI,YAAYJ,EAAII,YAAYJ,GAAKP,SACnDY,OAAQL,GAAKK,OACbC,WAAYN,GAAKM,WACjBC,WAAYP,GAAKO,WACjBC,gBAAiBR,GAAKQ,iBAE1B,GAAsB,GAAnBR,GAAKO,YAAkC,KAAfP,GAAKK,OAAc,CAE1C,IAAI1C,EAAQ,IAAID,YAAY,cAAe,CAAEK,OAAQkC,IACrDxC,OAAOiB,cAAcf,EACzB,CACF,IAEC,WAGC,IAAIA,EAAQ,IAAID,YAAY,oBAAqB,CAAEK,OAAQ,CACvD0C,OAAQ,CACLC,aAAcjD,OAAOkD,mBAExBC,MAAO,CACHF,aAAcjD,OAAOoD,kBAG7BpD,OAAOiB,cAAcf,EACtB,CAZA","sources":["webpack://boss-show-time/./src/proxyAjax.js"],"sourcesContent":[";(function () {\n    if ( typeof window.CustomEvent === \"function\" ) return false;\n     \n    function CustomEvent ( event, params ) {\n      params = params || { bubbles: false, cancelable: false, detail: undefined };\n      let evt = document.createEvent( 'CustomEvent' );\n      evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n      return evt;\n    }   \n    CustomEvent.prototype = window.Event.prototype;   \n    window.CustomEvent = CustomEvent;\n})();\n  \n  ;(function () {\n    function ajaxEventTrigger(event) {\n      let ajaxEvent = new CustomEvent(event, { detail: this });\n      window.dispatchEvent(ajaxEvent);\n    }\n    \n    let oldXHR = window.XMLHttpRequest;\n    if(!oldXHR) return console.error('不支持 XMLHttpRequest！ 请更换最新的 chrome 浏览器')\n     \n    function newXHR() {\n      let realXHR = new oldXHR();\n  \n      realXHR.addEventListener('abort', function () { ajaxEventTrigger.call(this, 'ajaxAbort'); }, false);\n      realXHR.addEventListener('error', function () { ajaxEventTrigger.call(this, 'ajaxError'); }, false);\n      realXHR.addEventListener('load', function () { ajaxEventTrigger.call(this, 'ajaxLoad'); }, false);\n      realXHR.addEventListener('loadstart', function () { ajaxEventTrigger.call(this, 'ajaxLoadStart'); }, false);\n      realXHR.addEventListener('progress', function () { ajaxEventTrigger.call(this, 'ajaxProgress'); }, false);\n      realXHR.addEventListener('timeout', function () { ajaxEventTrigger.call(this, 'ajaxTimeout'); }, false);\n      realXHR.addEventListener('loadend', function () { ajaxEventTrigger.call(this, 'ajaxLoadEnd'); }, false);\n      realXHR.addEventListener('readystatechange', function() { ajaxEventTrigger.call(this, 'ajaxReadyStateChange'); }, false);\n  \n      let send = realXHR.send;\n      realXHR.send = function(...arg){\n        send.apply(realXHR,arg);\n        realXHR.body = arg[0];\n        ajaxEventTrigger.call(realXHR, 'ajaxSend');\n      }\n  \n      let open = realXHR.open;\n      realXHR.open = function(...arg){\n        open.apply(realXHR,arg)\n        realXHR.method = arg[0];\n        realXHR.orignUrl = arg[1];\n        realXHR.async = arg[2];\n        ajaxEventTrigger.call(realXHR, 'ajaxOpen');\n      }\n  \n      let setRequestHeader = realXHR.setRequestHeader;\n      realXHR.requestHeader = {};\n      realXHR.setRequestHeader = function(name, value){\n          realXHR.requestHeader[name] = value;\n          setRequestHeader.call(realXHR,name,value)\n      }\n      return realXHR;\n    }\n    newXHR.prototype = oldXHR.prototype;\n    window.XMLHttpRequest = newXHR;\n  })();\n\n  // 监听页面的ajax\n  window.addEventListener(\"ajaxReadyStateChange\",function(e){\n    let xhr = e.detail;\n    const data = {\n        response: xhr?.response,\n        responseType: xhr?.responseType,\n        responseURL: xhr?.responseURL?xhr.responseURL:xhr?.orignUrl,\n        status: xhr?.status,\n        statusText: xhr?.statusText,\n        readyState: xhr?.readyState,\n        withCredentials: xhr?.withCredentials,\n    };\n    if(xhr?.readyState == 4 && xhr?.status == 200){\n         // 直接给 xhr，app.js 收不到。\n        let event = new CustomEvent('ajaxGetData', { detail: data });\n        window.dispatchEvent(event);\n    }\n  });\n\n  ;(function() {\n    // 由于注入脚本的时候 DOMContentLoaded 已经触发，监听不到\n    // proxy 脚本已加载，发送事件\n    let event = new CustomEvent('proxyScriptLoaded', { detail: {\n        zhipin: {\n           initialState: window.__INITIAL_STATE__\n        },\n        lagou: {\n            initialState: window.__NEXT_DATA__\n        }\n    } });\n    window.dispatchEvent(event);\n  })();\n"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","ajaxEventTrigger","ajaxEvent","this","dispatchEvent","oldXHR","XMLHttpRequest","console","error","newXHR","realXHR","addEventListener","call","send","arg","apply","body","open","method","orignUrl","async","setRequestHeader","requestHeader","name","value","e","xhr","data","response","responseType","responseURL","status","statusText","readyState","withCredentials","zhipin","initialState","__INITIAL_STATE__","lagou","__NEXT_DATA__"],"sourceRoot":""}